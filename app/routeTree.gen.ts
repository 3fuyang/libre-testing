/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as HomeworkIndexImport } from './routes/homework/index'
import { Route as HomeworkTriangleJudgeImport } from './routes/homework/triangle-judge'
import { Route as HomeworkTelecomSystemImport } from './routes/homework/telecom-system'
import { Route as HomeworkComputerSellingImport } from './routes/homework/computer-selling'
import { Route as HomeworkCalendarProblemImport } from './routes/homework/calendar-problem'
import { Route as FinalProjectUnitTestingImport } from './routes/final-project/unit-testing'
import { Route as FinalProjectSystemTestingImport } from './routes/final-project/system-testing'
import { Route as FinalProjectIntegrationTestingImport } from './routes/final-project/integration-testing'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeworkIndexRoute = HomeworkIndexImport.update({
  id: '/homework/',
  path: '/homework/',
  getParentRoute: () => rootRoute,
} as any)

const HomeworkTriangleJudgeRoute = HomeworkTriangleJudgeImport.update({
  id: '/homework/triangle-judge',
  path: '/homework/triangle-judge',
  getParentRoute: () => rootRoute,
} as any)

const HomeworkTelecomSystemRoute = HomeworkTelecomSystemImport.update({
  id: '/homework/telecom-system',
  path: '/homework/telecom-system',
  getParentRoute: () => rootRoute,
} as any)

const HomeworkComputerSellingRoute = HomeworkComputerSellingImport.update({
  id: '/homework/computer-selling',
  path: '/homework/computer-selling',
  getParentRoute: () => rootRoute,
} as any)

const HomeworkCalendarProblemRoute = HomeworkCalendarProblemImport.update({
  id: '/homework/calendar-problem',
  path: '/homework/calendar-problem',
  getParentRoute: () => rootRoute,
} as any)

const FinalProjectUnitTestingRoute = FinalProjectUnitTestingImport.update({
  id: '/final-project/unit-testing',
  path: '/final-project/unit-testing',
  getParentRoute: () => rootRoute,
} as any)

const FinalProjectSystemTestingRoute = FinalProjectSystemTestingImport.update({
  id: '/final-project/system-testing',
  path: '/final-project/system-testing',
  getParentRoute: () => rootRoute,
} as any)

const FinalProjectIntegrationTestingRoute =
  FinalProjectIntegrationTestingImport.update({
    id: '/final-project/integration-testing',
    path: '/final-project/integration-testing',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/final-project/integration-testing': {
      id: '/final-project/integration-testing'
      path: '/final-project/integration-testing'
      fullPath: '/final-project/integration-testing'
      preLoaderRoute: typeof FinalProjectIntegrationTestingImport
      parentRoute: typeof rootRoute
    }
    '/final-project/system-testing': {
      id: '/final-project/system-testing'
      path: '/final-project/system-testing'
      fullPath: '/final-project/system-testing'
      preLoaderRoute: typeof FinalProjectSystemTestingImport
      parentRoute: typeof rootRoute
    }
    '/final-project/unit-testing': {
      id: '/final-project/unit-testing'
      path: '/final-project/unit-testing'
      fullPath: '/final-project/unit-testing'
      preLoaderRoute: typeof FinalProjectUnitTestingImport
      parentRoute: typeof rootRoute
    }
    '/homework/calendar-problem': {
      id: '/homework/calendar-problem'
      path: '/homework/calendar-problem'
      fullPath: '/homework/calendar-problem'
      preLoaderRoute: typeof HomeworkCalendarProblemImport
      parentRoute: typeof rootRoute
    }
    '/homework/computer-selling': {
      id: '/homework/computer-selling'
      path: '/homework/computer-selling'
      fullPath: '/homework/computer-selling'
      preLoaderRoute: typeof HomeworkComputerSellingImport
      parentRoute: typeof rootRoute
    }
    '/homework/telecom-system': {
      id: '/homework/telecom-system'
      path: '/homework/telecom-system'
      fullPath: '/homework/telecom-system'
      preLoaderRoute: typeof HomeworkTelecomSystemImport
      parentRoute: typeof rootRoute
    }
    '/homework/triangle-judge': {
      id: '/homework/triangle-judge'
      path: '/homework/triangle-judge'
      fullPath: '/homework/triangle-judge'
      preLoaderRoute: typeof HomeworkTriangleJudgeImport
      parentRoute: typeof rootRoute
    }
    '/homework/': {
      id: '/homework/'
      path: '/homework'
      fullPath: '/homework'
      preLoaderRoute: typeof HomeworkIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/final-project/integration-testing': typeof FinalProjectIntegrationTestingRoute
  '/final-project/system-testing': typeof FinalProjectSystemTestingRoute
  '/final-project/unit-testing': typeof FinalProjectUnitTestingRoute
  '/homework/calendar-problem': typeof HomeworkCalendarProblemRoute
  '/homework/computer-selling': typeof HomeworkComputerSellingRoute
  '/homework/telecom-system': typeof HomeworkTelecomSystemRoute
  '/homework/triangle-judge': typeof HomeworkTriangleJudgeRoute
  '/homework': typeof HomeworkIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/final-project/integration-testing': typeof FinalProjectIntegrationTestingRoute
  '/final-project/system-testing': typeof FinalProjectSystemTestingRoute
  '/final-project/unit-testing': typeof FinalProjectUnitTestingRoute
  '/homework/calendar-problem': typeof HomeworkCalendarProblemRoute
  '/homework/computer-selling': typeof HomeworkComputerSellingRoute
  '/homework/telecom-system': typeof HomeworkTelecomSystemRoute
  '/homework/triangle-judge': typeof HomeworkTriangleJudgeRoute
  '/homework': typeof HomeworkIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/final-project/integration-testing': typeof FinalProjectIntegrationTestingRoute
  '/final-project/system-testing': typeof FinalProjectSystemTestingRoute
  '/final-project/unit-testing': typeof FinalProjectUnitTestingRoute
  '/homework/calendar-problem': typeof HomeworkCalendarProblemRoute
  '/homework/computer-selling': typeof HomeworkComputerSellingRoute
  '/homework/telecom-system': typeof HomeworkTelecomSystemRoute
  '/homework/triangle-judge': typeof HomeworkTriangleJudgeRoute
  '/homework/': typeof HomeworkIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/final-project/integration-testing'
    | '/final-project/system-testing'
    | '/final-project/unit-testing'
    | '/homework/calendar-problem'
    | '/homework/computer-selling'
    | '/homework/telecom-system'
    | '/homework/triangle-judge'
    | '/homework'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/final-project/integration-testing'
    | '/final-project/system-testing'
    | '/final-project/unit-testing'
    | '/homework/calendar-problem'
    | '/homework/computer-selling'
    | '/homework/telecom-system'
    | '/homework/triangle-judge'
    | '/homework'
  id:
    | '__root__'
    | '/'
    | '/final-project/integration-testing'
    | '/final-project/system-testing'
    | '/final-project/unit-testing'
    | '/homework/calendar-problem'
    | '/homework/computer-selling'
    | '/homework/telecom-system'
    | '/homework/triangle-judge'
    | '/homework/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FinalProjectIntegrationTestingRoute: typeof FinalProjectIntegrationTestingRoute
  FinalProjectSystemTestingRoute: typeof FinalProjectSystemTestingRoute
  FinalProjectUnitTestingRoute: typeof FinalProjectUnitTestingRoute
  HomeworkCalendarProblemRoute: typeof HomeworkCalendarProblemRoute
  HomeworkComputerSellingRoute: typeof HomeworkComputerSellingRoute
  HomeworkTelecomSystemRoute: typeof HomeworkTelecomSystemRoute
  HomeworkTriangleJudgeRoute: typeof HomeworkTriangleJudgeRoute
  HomeworkIndexRoute: typeof HomeworkIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FinalProjectIntegrationTestingRoute: FinalProjectIntegrationTestingRoute,
  FinalProjectSystemTestingRoute: FinalProjectSystemTestingRoute,
  FinalProjectUnitTestingRoute: FinalProjectUnitTestingRoute,
  HomeworkCalendarProblemRoute: HomeworkCalendarProblemRoute,
  HomeworkComputerSellingRoute: HomeworkComputerSellingRoute,
  HomeworkTelecomSystemRoute: HomeworkTelecomSystemRoute,
  HomeworkTriangleJudgeRoute: HomeworkTriangleJudgeRoute,
  HomeworkIndexRoute: HomeworkIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/final-project/integration-testing",
        "/final-project/system-testing",
        "/final-project/unit-testing",
        "/homework/calendar-problem",
        "/homework/computer-selling",
        "/homework/telecom-system",
        "/homework/triangle-judge",
        "/homework/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/final-project/integration-testing": {
      "filePath": "final-project/integration-testing.tsx"
    },
    "/final-project/system-testing": {
      "filePath": "final-project/system-testing.tsx"
    },
    "/final-project/unit-testing": {
      "filePath": "final-project/unit-testing.tsx"
    },
    "/homework/calendar-problem": {
      "filePath": "homework/calendar-problem.tsx"
    },
    "/homework/computer-selling": {
      "filePath": "homework/computer-selling.tsx"
    },
    "/homework/telecom-system": {
      "filePath": "homework/telecom-system.tsx"
    },
    "/homework/triangle-judge": {
      "filePath": "homework/triangle-judge.tsx"
    },
    "/homework/": {
      "filePath": "homework/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
